{"version":3,"sources":["component/AddCategory.js","helpers/getGifs.js","component/GifGridItem.js","component/GifGrid.js","hooks/useFetchGifs.js","component/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","categories","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","image","id","title","images","original","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"mNAMaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE9B,EAAkCC,mBAAS,IAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KAoBI,OACI,mCAEI,sBAAMC,SAfM,SAAEC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IACzBR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAElDC,QAAQC,IAAI,iBACZR,EAAe,MASX,SACM,uBACNS,KAAM,OACNC,MAASX,EACTY,SAxBiB,SAAET,GACvBF,EAAcE,EAAEU,OAAOF,e,+BCPjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,0FAE4EC,UAAUH,GAFtF,sBAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAGnB,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbV,IAAKQ,EAAMG,OAAOC,SAASZ,QAZf,kBAiBbM,GAjBa,4CAAH,sDCFRO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAT,QAAQC,IAAIiB,EAAIC,EAAOV,GAEnB,sBAAKc,UAAU,kBAAf,UACI,qBAAKC,IAAQf,EAAMgB,IAAON,IAC1B,kCAAMA,SCHLO,EAAU,SAAC,GAAuB,IAAD,IAApBnB,gBAAoB,MAAT,GAAS,EAS3C,ECTyB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OApBAC,qBAAU,WAGNxB,EAAQC,GAAUwB,MACd,SAACC,GACGhC,QAAQC,IAAI+B,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAMGqB,EDhBuBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAKnB,OACI,qCACA,oBAAIJ,UAAU,kBAAd,SAAiChB,IAEhCoB,GAAW,mBAAGJ,UAAW,iBAAd,uBAEZ,qBAAKA,UAAW,YAAhB,SAIQH,EAAOJ,KAAI,SAACC,GAAD,OAEH,aADA,CACC,EAAD,eAEIA,GADEA,EAAMC,aEkBrBgB,EAzCM,WAIjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAUA,OACI,qCACA,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,uBAIA,6BAEQS,EAAWiB,KAAK,SAACT,EAAU4B,GAAX,OAEvB,cAAC,EAAD,CAEA5B,SAAYA,GADLA,EAAW4B,Y,MC9B3BC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.89675157.chunk.js","sourcesContent":["\n\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ( {setCategories} ) => {\n\nlet [inputValue, setImputValue] = useState('');\n\n\n   const handleInputChange = ( e ) =>{\n        setImputValue(e.target.value);\n  \n   } ;\n\n   const handleSummit = ( e ) =>{\n        e.preventDefault();\n        if( inputValue.trim().length > 2){\n              setCategories(categories => [inputValue, ...categories]);\n\n        console.log('Summit Hecho!');\n        setImputValue (\"\");\n        }\n\n      \n   };\n\n    return (\n        <>\n \n            <form onSubmit = {handleSummit}>\n                  <input\n            type= 'text'\n            value = {inputValue}\n            onChange ={ handleInputChange }\n         />\n            </form>\n       \n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n\n};\n","\n\n\n\n\n export const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=wGlqhmQl8UGQDP7A0JnHkadJ1MYFb10X&q=${ encodeURI(category)  }&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((image) => {\n    \n\n        return {\n            id: image.id,\n            title: image.title,\n            url: image.images.original.url\n        }\n    });\n  \n\n    return gifs;\n\n\n\n}","\nimport React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    console.log(id, title, url);\n    return (\n        <div className=\"animate__fadeIn\">\n            <img src = { url } alt = {title}/>\n            <p> { title }</p>\n        </div>\n    )\n}\n","\nimport React from 'react'\nimport { useFecthGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category = \"\" }) => {\n   // const apyKey = 'wGlqhmQl8UGQDP7A0JnHkadJ1MYFb10X';\n\n\n\n\n\n  \n   \n   const {data:images, loading} = useFecthGifs( category);\n  \n\n\n\n    return ( \n        <> \n        <h3 className=\"animate__fadeIn\">{category}</h3>\n\n        {loading && <p className= \"animate__pulse\"> Cargando</p>}\n\n        <div className =\"card-grid\">\n           \n\n                {\n                images.map((image) => (\n                        // <li key = {image.id}> {image.title}</li>\n                        <GifGridItem \n                        key ={image.id}\n                        {...image}\n                        />\n                ))\n                }\n\n        </div>\n        </>\n   \n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\nexport const useFecthGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n    useEffect(() => {\n\n\n        getGifs(category).then(\n            (imgs) => {\n                console.log(imgs);\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            }\n        );\n\n\n    }, [category]);\n\n\n\n\n\n    return state; // {data: [], loading: true};\n\n}","\nimport React from 'react';\n\n\n//import PropTypes from 'prop-types';\nimport { useState } from 'react/cjs/react.development';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nconst GifExpertApp = () =>{\n\n    //const categories = ['One punch', 'Samura X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['One punch']);\n\n\n    // const handleAdd = () =>{\n\n    //    // setCategories( [...categories, 'HunterxHunter']);\n    //   //  setCategories(categories => [...categories, 'HunterxHunter']);\n    \n    // };\n\n    return (\n        <>\n        <h2>GifExpertApp</h2>\n        <hr/>\n        <AddCategory setCategories = { setCategories }/>\n\n        <hr/>\n\n       \n\n        <ol>\n            { \n                categories.map( (category, index) => \n         ( \n         <GifGrid \n         key = {category + index}\n         category = {category}/>))\n            }\n\n        </ol>\n\n        </>\n    );\n};\n\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './component/GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  // {comentario random}\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}